name: Build and Publish WordPress Images

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  schedule:
    # Run weekly to pick up new WordPress versions
    - cron: '0 2 * * 1'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: quantcdn-templates/app-wordpress

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        php_version: ['7.4', '8.2', '8.3', '8.4']
        include:
          - php_version: '8.2' 
            is_default: true
          - php_version: '8.4'
            is_default: false
          - php_version: '8.3'
            is_default: false
          - php_version: '7.4'
            is_default: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build temp image for version detection
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: false
          load: true
          tags: temp-build:latest
          build-args: |
            BASE_IMAGE=wordpress:php${{ matrix.php_version }}-apache
          cache-from: type=gha,scope=php${{ matrix.php_version }}
          cache-to: type=gha,mode=max,scope=php${{ matrix.php_version }}

      - name: Get WordPress and PHP versions
        id: versions
        run: |
          WP_VERSION=$(docker run --rm temp-build:latest wp core version --path=/usr/src/wordpress)
          PHP_VERSION=$(docker run --rm temp-build:latest php -r "echo PHP_VERSION;")
          echo "WORDPRESS_VERSION=$WP_VERSION" >> $GITHUB_OUTPUT
          echo "PHP_VERSION=$PHP_VERSION" >> $GITHUB_OUTPUT
          echo "WordPress version: $WP_VERSION"
          echo "PHP version: $PHP_VERSION"
          echo "Expected PHP: ${{ matrix.php_version }}"

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag,suffix=-php${{ matrix.php_version }}
            type=raw,value=latest,enable=${{ matrix.is_default && github.ref == 'refs/heads/main' }}
            type=raw,value=php${{ matrix.php_version }},enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=${{ matrix.php_version }},enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=v${{ steps.versions.outputs.WORDPRESS_VERSION }}-php${{ matrix.php_version }},enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=dev-php${{ matrix.php_version }},enable=${{ github.ref == 'refs/heads/develop' }}
            type=raw,value=edge-php${{ matrix.php_version }},enable=${{ github.ref == 'refs/heads/develop' }}
            type=raw,value=v${{ steps.versions.outputs.WORDPRESS_VERSION }}-php${{ matrix.php_version }}-dev,enable=${{ github.ref == 'refs/heads/develop' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE_IMAGE=wordpress:php${{ matrix.php_version }}-apache
          cache-from: |
            type=gha,scope=php${{ matrix.php_version }}
            type=registry,ref=ghcr.io/quantcdn-templates/app-wordpress:cache-php${{ matrix.php_version }}
          cache-to: |
            type=gha,mode=max,scope=php${{ matrix.php_version }}
            type=registry,ref=ghcr.io/quantcdn-templates/app-wordpress:cache-php${{ matrix.php_version }},mode=max

      - name: Test container startup
        if: github.event_name != 'pull_request'
        run: |
          # Test that WP-CLI is available in our built image
          docker run --rm temp-build:latest wp --version

          # Start a test container without database (just test if it starts)
          docker run -d --name test-wordpress-php${{ matrix.php_version }} \
            -p 808${{ matrix.php_version == '7.4' && '1' || matrix.php_version == '8.2' && '2' || matrix.php_version == '8.3' && '3' || '4' }}:80 \
            temp-build:latest

          # Wait for Apache to start
          sleep 15

          # Test that Apache is running (will get WordPress database error page, but that's OK)
          # We just want to verify the container starts and Apache serves responses
          PORT=808${{ matrix.php_version == '7.4' && '1' || matrix.php_version == '8.2' && '2' || matrix.php_version == '8.3' && '3' || '4' }}
          curl -s -o /dev/null -w "%{http_code}" http://localhost:$PORT | grep -E "^(200|500|302)$" || exit 1

          # Clean up
          docker stop test-wordpress-php${{ matrix.php_version }}
          docker rm test-wordpress-php${{ matrix.php_version }}

      - name: Create release summary
        if: github.event_name != 'pull_request'
        run: |
          echo "## WordPress Template Build Summary (PHP ${{ matrix.php_version }})" >> $GITHUB_STEP_SUMMARY
          echo "- **WordPress Version**: ${{ steps.versions.outputs.WORDPRESS_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **PHP Version**: ${{ steps.versions.outputs.PHP_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Base Image**: \`wordpress:php${{ matrix.php_version }}-apache\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Tags**: \`php${{ matrix.php_version }}\`, \`${{ matrix.php_version }}\`" >> $GITHUB_STEP_SUMMARY
          if [ "${{ matrix.is_default }}" == "true" ]; then
            echo "- **Default Version**: \`latest\` tag (matches WordPress official default)" >> $GITHUB_STEP_SUMMARY
          fi
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY 