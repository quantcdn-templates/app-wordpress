name: Build and Publish WordPress Images

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  schedule:
    # Run weekly to pick up new WordPress versions
    - cron: '0 2 * * 1'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: quantcdn-templates/app-wordpress

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get WordPress version
        id: wp-version
        run: |
          WP_VERSION=$(docker run --rm wordpress:latest wp --version --allow-root | grep -oP '\d+\.\d+\.\d+' | head -1)
          echo "WORDPRESS_VERSION=$WP_VERSION" >> $GITHUB_OUTPUT
          echo "WordPress version: $WP_VERSION"

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ steps.wp-version.outputs.WORDPRESS_VERSION }},enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test WordPress installation
        if: github.event_name != 'pull_request'
        run: |
          # Start a test container
          docker run -d --name test-wordpress \
            -e WORDPRESS_DB_HOST=db \
            -e WORDPRESS_DB_NAME=wordpress \
            -e WORDPRESS_DB_USER=wordpress \
            -e WORDPRESS_DB_PASSWORD=wordpress \
            -p 8080:80 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

          # Wait for container to be ready
          sleep 30

          # Test health endpoint
          curl -f http://localhost:8080 || exit 1

          # Clean up
          docker stop test-wordpress
          docker rm test-wordpress

      - name: Create release summary
        if: github.event_name != 'pull_request'
        run: |
          echo "## WordPress Template Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **WordPress Version**: ${{ steps.wp-version.outputs.WORDPRESS_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Tagged with**: \`${{ steps.wp-version.outputs.WORDPRESS_VERSION }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY 