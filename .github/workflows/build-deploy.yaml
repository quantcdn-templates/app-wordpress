# This workflow is an example of how you can build and push this codebase to Quant Cloud.
# Use this as a starting point for your own workflow if you are forking this repository.
#
# Configuration Variables:
# - RUNNER_TYPE: Set to 'ubuntu-24.04-arm' for ARM runners, defaults to 'ubuntu-latest' (x86)
# - BUILD_PLATFORM: Set to 'linux/arm64' or 'linux/amd64' to match your runner
# - QUANT_BASE_URL: Set to 'https://dash.quantgov.cloud/api/v3' for QuantGov customers
#   (defaults to 'https://dashboard.quantcdn.io/api/v3')
name: Build and Push WordPress to Quant Cloud

on:
  push:
    branches:
      - develop
      - main
    tags:
      - '*'

concurrency:
  group: build-and-push-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ${{ vars.RUNNER_TYPE || 'ubuntu-latest' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Initialize Quant Cloud
        uses: quantcdn/quant-cloud-init-action@v1.1.5
        id: init
        with:
          quant_organization: ${{ secrets.QUANT_ORGANIZATION }}
          quant_api_key: ${{ secrets.QUANT_API_KEY }}
          base_url: ${{ vars.QUANT_BASE_URL || 'https://dashboard.quantcdn.io/api/v3' }}

      - name: Build and push WordPress image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ vars.BUILD_PLATFORM || 'linux/amd64' }}
          push: true
          tags: ${{ steps.init.outputs.stripped_endpoint }}/${{ secrets.QUANT_ORGANIZATION }}/${{ steps.init.outputs.quant_application }}:wordpress${{ steps.init.outputs.image_suffix }}
          build-args: |
            PHP_VERSION=${{ github.ref == 'refs/heads/develop' && '8.2-dev' || '8.2' }}
            WORDPRESS_PHP_VERSION=8.2
          cache-from: type=gha,scope=app-wordpress
          cache-to: type=gha,mode=max,scope=app-wordpress

      - name: Create environment if it doesn't exist
        if: ${{ !startsWith(github.ref, 'refs/tags/') && steps.init.outputs.environment_exists == 'false' }}
        uses: quantcdn/quant-cloud-environment-action@v1.2.1
        with:
          api_key: ${{ secrets.QUANT_API_KEY }}
          organization: ${{ secrets.QUANT_ORGANIZATION }}
          app_name: ${{ steps.init.outputs.quant_application }}
          environment_name: ${{ steps.init.outputs.environment_name }}
          from_environment: production
          image_suffix: ${{ steps.init.outputs.image_suffix_clean }}
          base_url: ${{ vars.QUANT_BASE_URL || 'https://dashboard.quantcdn.io/api/v3' }}

      - name: Sync database from production to new environment
        if: ${{ !startsWith(github.ref, 'refs/tags/') && steps.init.outputs.environment_exists == 'false' && steps.init.outputs.environment_name != 'production' }}
        uses: quantcdn/quant-cloud-environment-sync-action@v1.0.0
        with:
          api_key: ${{ secrets.QUANT_API_KEY }}
          organization: ${{ secrets.QUANT_ORGANIZATION }}
          app_name: ${{ steps.init.outputs.quant_application }}
          environment_name: ${{ steps.init.outputs.environment_name }}
          source: production
          type: database
          wait: true
          wait_interval: 10
          max_retries: 30

      - name: Redeploy existing environment
        if: ${{ !startsWith(github.ref, 'refs/tags/') && steps.init.outputs.environment_exists == 'true' }}
        uses: quantcdn/quant-cloud-environment-state-action@v1
        with:
          api_key: ${{ secrets.QUANT_API_KEY }}
          organization: ${{ secrets.QUANT_ORGANIZATION }}
          application: ${{ steps.init.outputs.quant_application }}
          environment: ${{ steps.init.outputs.environment_name }}
          action: redeploy
          base_url: ${{ vars.QUANT_BASE_URL || 'https://dashboard.quantcdn.io/api/v3' }}